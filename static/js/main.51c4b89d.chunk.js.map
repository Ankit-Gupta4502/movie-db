{"version":3,"sources":["context.js","SearchForm.js","SingleMovie.js","Movies.js","Home.js","App.js","index.js"],"names":["API_ENDPOINT","process","console","log","AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","movies","setMovies","show","msg","error","setError","query","setQuery","fetchMovies","a","fetch","resp","json","data","Response","Search","Error","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","SingleMovie","id","useParams","movie","setMovie","fetchMovie","url","to","poster","Poster","plot","Plot","title","Title","year","Year","src","alt","Movies","map","imdbID","key","Home","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c4b89d.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\n// make sure to use https\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`\nconsole.log(API_ENDPOINT)\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const[loading,setLoading] = useState(true)\n  const[movies,setMovies] = useState([])\n  const[error,setError] = useState({show:false,msg:''})\n  const[query,setQuery] = useState('avengers')\n\n  const fetchMovies=async(movies)=>{\n    // setLoading(true)\n    try {\n      const resp = await fetch(movies)\n      const data = await resp.json()\n      if (data.Response==='True') {\n        setMovies(data.Search)\n        setError({show:false,msg:''})\n      }\n      else{\n        setError({show:true,msg:data.Error})\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    setLoading(false)\n  }\n\n  useEffect(()=>{\n    fetchMovies(`${API_ENDPOINT}&s=${query}`)\n  },[query])\n\n  return <AppContext.Provider value={{loading,error,movies,query,setQuery}}>{children}</AppContext.Provider>\n}\n// make sure use\nexport const useGlobalContext = () => { \n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\nconst SearchForm = () => {\n  const { query, setQuery, error } = useGlobalContext()\n  return (\n    <form className='search-form' onSubmit={(e) => e.preventDefault()}>\n      <h2>search movies</h2>\n      <input\n        type='text '\n        className='form-input'\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      {error.show && <div className='error'>{error.msg}</div>}\n    </form>\n  )\n}\n\nexport default SearchForm\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { API_ENDPOINT } from './context'\n\nconst SingleMovie = () => {\n  const{id} = useParams()\n  const[movie,setMovie] = useState({})\n  const[loading,setLoading] = useState(true)\n  const[error,setError] = useState({show:false,msg:''})\n\n  const fetchMovie=async(url)=>{\n    const resp = await fetch(url)\n    const data = await resp.json()\n    console.log (data)\n    if (data.Response==='False') {\n      setError({show:true,msg:data.Error})\n      setLoading(false)\n    }\n    else{\n      setMovie(data)\n      setLoading(false)\n    }\n  }\n\n  useEffect(()=>{\n    fetchMovie(`${API_ENDPOINT}&i=${id}`)\n    // eslint-disable-next-line\n  },[])\n\n  if (loading) {\n    return <div className='loading'></div>\n  }\n  if (error.show) {\n    return <div className=\"page-error\">\n      <h1>{error.msg}</h1>\n      <Link to='/' className='btn'>Back To Movies</Link>\n    </div>\n  }\n  const{Poster:poster,Plot:plot,Title:title,Year:year} = movie\n  return <section className=\"single-movie\">\n    <img src={poster} alt={title} />\n   <div className=\"single-movie-info\">\n     <h2>{title}</h2>\n     <p>{plot}</p>\n     <h4>{year}</h4>\n     <Link to='/' className='btn'>Back To Movies</Link>\n   </div>\n  </section>\n}\n\nexport default SingleMovie\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { Link } from \"react-router-dom\";\nimport SingleMovie from \"./SingleMovie\";\nconst url =\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\n\nconst Movies = () => {\n  const { movies, loading } = useGlobalContext();\n\n  return <section className=\"movies\">\n    {movies.map((movie)=>{\n      const{imdbID:id,Year:year,Poster:poster,Title:title} = movie\n      return <Link to={`/movies/${id}`}key={id} className='movie'>\n        <article>\n          <img src={poster==='N/A'?url:poster} alt={title} />\n          <div className=\"movie-info\">\n            <h2 className=\"title\">{title}</h2>\n            <p>{year}</p>\n          </div>\n        </article>\n      </Link>\n    })}\n  </section>;\n};\n\nexport default Movies;\n","import React from 'react'\nimport Form from './SearchForm'\nimport Movies from './Movies'\nconst Home = () => {\n  return (\n    <>\n    <Form/>\n    <Movies/>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './Home'\nimport Movie from './SingleMovie'\n// key = 4f220375\n\nfunction App() {\n\n  return <Switch>\n    <Route path='/' exact>\n      <Home/>\n    </Route>\n    <Route path='/movies/:id'  children={<Movie/>}/>\n  </Switch>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <Router>\n      <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}